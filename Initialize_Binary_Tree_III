struct TreeNode{
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};

int Init(TreeNode *a, TreeNode *b, vector<string> val, int &i)
{
    if(val[i] == "#")
    {
        if(a==b->left)
        {
            b->left=NULL;
        }
        if(a==b->right)
        {
            b->right=NULL;
        }
        ++i;
        return 0;
    }
    else
    {
        a->val = stoi(val[i]);
        ++i;
        b = a;
        a->left=new TreeNode(0);
        a->right=new TreeNode(0);
        Init(a->left, b, val, i);
        Init(a->right, b, val, i);
    }
}

void PreOrderTraverse(TreeNode *a)
{
    if(NULL != a)
    {
        cout<<a->val<<endl;
        PreOrderTraverse(a->left);
        PreOrderTraverse(a->right);
    } else
        return;
}

int main() {
    TreeNode *a=new TreeNode(0);
    TreeNode *b=new TreeNode(0);
    vector<string> val = {"5","2","1","#","#","3","#","#","13","7",
                          "6","#","#","9","#","#","6","#","#"};
    int i = 0;
    Init(a, b, val, i);
    PreOrderTraverse(a);
    return 0;
}
