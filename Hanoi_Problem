//汉诺塔问题：通过此程序学习递归算法
//有n个盘子，从小到大依此从上往下叠放，在1号位。1号位，2号位，3号位从左到右相邻。
//现需要将n个盘子，从1号位通过2号位移到3号位，或者从3号位置通过2号移到1号。移动的过程中，不允许，大盘叠在小盘上。
//n为盘子的数目  
//a为1号位， b为2号位， c为3号位  
void  hanoi(int n, char a, char b, char c)  
{  
    if (n == 1) // 输出条件  
    {  
        std::cout << a << b << c << std::endl; //特点1，基本部分  
    }  
    else{ // 特点2 递归部分  
        //特点4： 以下为  整体利用部分为其一步，完成当前整体整个步骤   
        hanoi(n - 1, a, b, c);  //特点3  整体化为部分，部分视为1步，即将n-1个盘子 从a 移到c   
        std::cout << a << b << std::endl; // 第n个盘子从 a 到 b  
        hanoi(n - 1, c, b, a); // 特点3  
        std::cout << b << c << std::endl;  
        hanoi(n - 1, a, b, c); //特点3  
    }  
}  
